{"version":3,"sources":["cookies.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","App.js","config.js","index.js"],"names":["cookies","Cookies","Auth","setUserObj","useState","username","setUsername","password","setPassword","newAccount","setNewAccount","loading","setLoading","error","setError","onChange","event","target","name","value","onSubmit","e","a","preventDefault","data","console","log","axios","post","res","response","val","token","option","setCookie","set","user","SocialLogin","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","onClick","prev","faGoogle","faGithub","Nweet","nweetObj","isOwner","setNweets","nweets","editMode","setEditmode","body","newNweet","setNewNweet","onEditToggle","trim","alert","id","_id","result","restNweets","filter","v","updatedPost","onDelete","delete","message","autoFocus","class","faTrash","faPencilAlt","NweetFactory","userObj","fetchData","nweet","setNweet","newPost","maxLength","Home","get","posts","useEffect","marginTop","map","userId","Profile","newDisplayname","setnewDisplayname","history","useHistory","Logout","push","newUser","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","fetchUser","method","url","headers","Authorization","Boolean","envSettings","window","defaults","baseURL","API_URL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83806575.chunk.js","sourcesContent":["import { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\n\nexport const setCookie = (name, val, option) => {\n  return cookies.set(name, val, { ...option });\n};\n\nexport const getCookie = (name) => {\n  return cookies.get(name);\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport axios from \"axios\";\nimport { setCookie } from \"../cookies\";\n\nconst Auth = ({ setUserObj }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"username\") {\n      setUsername(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const data = { username, password };\n\n    if (newAccount) {\n      console.log(\"회원가입\");\n      try {\n        setLoading(true);\n        const res = await axios.post(\"user/join\", data); // 가입정보 서버송신 > db저장 > 유저객체 복원 > 프론트 수신(res)\n        setUserObj(res.data); // 유저상태 업데이트\n      } catch (err) {\n        err.response && setError(err.response.data);\n      }\n      setLoading(false);\n    } else {\n      console.log(\"로그인\");\n      try {\n        setLoading(true);\n        const res = await axios.post(\"/user/login\", data); // 로그인정보 서버송신 > db조회 > 유저객체 복원 > 프론트 수신(res)\n        setCookie(\"myToken\", res.data.token);\n        setUserObj(res.data.user); // 유저상태 업데이트\n      } catch (err) {\n        err.response && setError(err.response.data);\n      }\n      setLoading(false);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const SocialLogin = async (e) => {\n    const res = await axios.post(\"/auth/google/callback\");\n    console.log(res.data);\n  };\n\n  if (loading)\n    return (\n      <div className=\"loadingBox\">\n        <div className=\"dim\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    );\n  //   if (error) return <div className=\"statusBar\">Error!</div>;\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          required\n          value={username}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Passoword\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <span className=\"errMsg\"> {error} </span>\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n          className=\"authInput authSubmit\"\n        />\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}{\" \"}\n      </span>\n      <div className=\"authBtns\">\n        <button onClick={SocialLogin} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={SocialLogin} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\n\nconst Nweet = ({ nweetObj, isOwner, setNweets, nweets }) => {\n  const [editMode, setEditmode] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.body);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onEditToggle = () => {\n    setEditmode((prev) => !prev);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewNweet(value);\n  };\n\n  // 게시글 수정(POST:post/id)\n  const onSubmit = async () => {\n    console.log(\"수정\");\n    // 서버에 postID와 수정데이터를 전달\n    // await axios.post(`/post/${nweetObj.id}`, newNweet);\n    if (!newNweet || !newNweet.trim()) {\n      return alert(\"게시글을 입력하세요\");\n    }\n    const data = { id: nweetObj._id, body: newNweet };\n    try {\n      setLoading(true);\n      const result = await axios.post(`/post/update`, data);\n      console.log(result.data);\n      const restNweets = nweets.filter((v) => v._id !== nweetObj._id);\n      setNweets([result.data.updatedPost, ...restNweets]);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n    setNewNweet(\"\");\n    setEditmode(false);\n  };\n\n  // 게시글 삭제(DELETE:post/id)\n  const onDelete = async () => {\n    console.log(\"삭제\");\n    // 서버에 postID를 전달\n    try {\n      setLoading(true);\n      const result = await axios.delete(`/post/${nweetObj._id}`);\n      if (result.data.message === \"삭제완료\") {\n        setNweets(nweets.filter((v) => v._id !== nweetObj._id));\n      }\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  if (loading)\n    return (\n      <div className=\"loadingBox\">\n        <div className=\"dim\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    );\n  if (error) return <div className=\"statusBar\">Error!</div>;\n\n  return (\n    <div className=\"nweet\">\n      {editMode ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={onEditToggle} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          {/* <div className=\"nweet_title\">{nweetObj.title}</div> */}\n          <div className=\"nweet_body\">{nweetObj.body}</div>\n          {isOwner && (\n            <div class=\"nweet__actions\">\n              <span onClick={onDelete}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={onEditToggle}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst NweetFactory = ({ userObj, fetchData, setNweets, nweets }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (!nweet || !nweet.trim()) {\n      return alert(\"게시글을 입력하세요\");\n    }\n    const data = { id: userObj._id, body: nweet };\n    try {\n      setLoading(true);\n      const result = await axios.post(\"/post/add\", data);\n      console.log(\"받아온 새게시물\", result.data.newPost);\n      setNweets([result.data.newPost, ...nweets]);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n    setNweet(\"\");\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNweet(value);\n  };\n\n  if (loading)\n    return (\n      <div className=\"loadingBox\">\n        <div className=\"dim\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    );\n  if (error) return <div className=\"statusBar\">Error!</div>;\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"what's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\nimport axios from \"axios\";\n\nconst initialV = [\n  { id: 0, body: \"ex 0\", userId: 0, creator: \"me\" },\n  { id: 1, body: \"ex 1\", userId: 0, creator: \"me\" },\n];\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 첫 렌더 & 갱신 게시글 불러오기(GET:/posts)\n  const fetchData = async () => {\n    console.log(\"게시글갱신\");\n    try {\n      setLoading(true);\n      const result = await axios.get(\"/post\");\n      // const result = await axios.get(\"http://localhost:3005/board\");\n      console.log(\"전체게시물\", result.data.posts);\n      setNweets(result.data.posts);\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (loading)\n    return (\n      <div className=\"loadingBox\">\n        <div className=\"dim\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    );\n  if (error) return <div className=\"statusBar\">Error!</div>;\n\n  return (\n    <div className=\"container\">\n      <NweetFactory\n        fetchData={fetchData}\n        userObj={userObj}\n        setNweets={setNweets}\n        nweets={nweets}\n      />\n      <div style={{ marginTop: 30 }}>\n        {!!nweets &&\n          nweets.map((nweet) => (\n            <Nweet\n              key={nweet._id}\n              nweetObj={nweet}\n              isOwner={nweet.userId === userObj._id}\n              setNweets={setNweets}\n              nweets={nweets}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Profile = ({ setUserObj, userObj }) => {\n  const [newDisplayname, setnewDisplayname] = useState(userObj.name);\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const Logout = async () => {\n    // userObj 초기화\n    // try {\n    //   setLoading(true);\n    //   const res = await axios(`/user/${userObj}/logout`);\n    //   if(res.data) {\n    setUserObj();\n    // 쿠키삭제\n    //   }\n    history.push(\"/\");\n    // } catch (e) {\n    //   setError(e.response);\n    //   console.log(e);\n    // }\n    // setLoading(false);\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setnewDisplayname(value);\n  };\n\n  // fetchUser를 불러와서 유저를 갱신 시킬 것인지 고민\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(newDisplayname);\n    const data = { name: newDisplayname, id: userObj._id };\n    if (userObj.username !== newDisplayname) {\n      try {\n        setLoading(true);\n        const res = await axios.post(`/user/update`, data);\n        console.log(\"받아온 유저\", res.data.newUser);\n        setUserObj(res.data.newUser);\n      } catch (e) {\n        setError(e.response);\n        console.log(e);\n      }\n      setLoading(false);\n      history.push(\"/\");\n    }\n  };\n\n  if (loading)\n    return (\n      <div className=\"loadingBox\">\n        <div className=\"dim\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    );\n  if (error) return <div className=\"statusBar\">Error!</div>;\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayname}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={Logout}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.username ? `${userObj.username}의 Profile` : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ setUserObj, userObj, isLoggedIn }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile setUserObj={setUserObj} userObj={userObj} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth setUserObj={setUserObj} />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./components/Router\";\nimport axios from \"axios\";\nimport { getCookie } from \"../src/cookies\";\n\n// const fakeUser = { id: 0, name: \"hs\" };\n\nfunction App() {\n  const [userObj, setUserObj] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchUser = async () => {\n    console.log(\"유저토큰 재발급\");\n    try {\n      setLoading(true);\n\n      const result = await axios({\n        method: \"get\",\n        url: \"/user\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `${getCookie(\"myToken\")}`,\n        },\n      });\n      if (result.data.user) {\n        setUserObj(result.data.user);\n      }\n    } catch (e) {\n      setError(e);\n    }\n    setLoading(false);\n  };\n\n  // 유저 불러오기\n  useEffect(() => {\n    console.log(\"첫 렌더, 새로고침 시 유저 불러오기\");\n    fetchUser();\n  }, []);\n\n  if (loading)\n    return (\n      <div className=\"loadingBox\">\n        <div className=\"dim\"></div>\n        <div className=\"circle\"></div>\n      </div>\n    );\n  // if (error) return <div className=\"statusBar\">Error!</div>;\n\n  return (\n    <AppRouter\n      setUserObj={setUserObj}\n      userObj={userObj}\n      isLoggedIn={Boolean(userObj)}\n    />\n  );\n}\n\nexport default App;\n","const envSettings = window;\n\nexport function Config() {\n  return envSettings.API_URL;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport { Config } from \"./config\";\n// dotenv.config();\n// console.log(process.env.REACT_APP_API_SERVER_URL);\n// const { REACT_APP_API_SERVER_URL } = process.env;\n// console.log(REACT_APP_API_SERVER_URL);\n\naxios.defaults.baseURL = Config();\n// axios.defaults.baseURL = \"http://localhost:3005\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}